// <auto-generated />
using Hospitality.Examination.API.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hospitality.Examination.Persistance.Migrations
{
    [DbContext(typeof(ExaminationContext))]
    partial class ExaminationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hospitality.Examination.Domain.Entities.ExaminationInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExaminationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExaminationTypeId");

                    b.ToTable("Examinations");
                });

            modelBuilder.Entity("Hospitality.Examination.Domain.Entities.ExaminationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("Duration")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ExaminationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = 80000000L,
                            Name = "Biochemia krwi",
                            Price = 1234.99
                        },
                        new
                        {
                            Id = 2,
                            Duration = 100000000L,
                            Name = "USG serca",
                            Price = 1001.99
                        },
                        new
                        {
                            Id = 3,
                            Duration = 70000000L,
                            Name = "RTG głowy",
                            Price = 900.99000000000001
                        },
                        new
                        {
                            Id = 4,
                            Duration = 60000000L,
                            Name = "RTG celowane na ząb obrotnika",
                            Price = 1234.99
                        },
                        new
                        {
                            Id = 5,
                            Duration = 60000000L,
                            Name = "RTG styczne czaszki",
                            Price = 500.0
                        },
                        new
                        {
                            Id = 6,
                            Duration = 60000000L,
                            Name = "Leczenie kanałowe zębów",
                            Price = 550.0
                        },
                        new
                        {
                            Id = 7,
                            Duration = 80000000L,
                            Name = "Badanie kału na pasożyty",
                            Price = 900.0
                        },
                        new
                        {
                            Id = 8,
                            Duration = 100000000L,
                            Name = "Cytologia płynna",
                            Price = 700.0
                        },
                        new
                        {
                            Id = 9,
                            Duration = 70000000L,
                            Name = "Kolonoskopia",
                            Price = 2500.0
                        },
                        new
                        {
                            Id = 10,
                            Duration = 60000000L,
                            Name = "Gastroskopia",
                            Price = 1500.0
                        });
                });

            modelBuilder.Entity("Hospitality.Examination.Domain.Entities.ExaminationInfo", b =>
                {
                    b.HasOne("Hospitality.Examination.Domain.Entities.ExaminationType", "Type")
                        .WithMany()
                        .HasForeignKey("ExaminationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
